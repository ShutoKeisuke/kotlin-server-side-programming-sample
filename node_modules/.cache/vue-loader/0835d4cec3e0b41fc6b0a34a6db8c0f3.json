{"remainingRequest":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\src\\views\\BookDetail.vue?vue&type=style&index=0&id=2249fd58&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\src\\views\\BookDetail.vue","mtime":1619756249517},{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCmgzIHsNCiAgICBtYXJnaW4tYm90dG9tOiA1cHg7DQp9DQoNCnRhYmxlLCB0aCwgdGQgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrDQp9DQoNCnRhYmxlIHsNCiAgICBtYXJnaW46IDAgYXV0bzsNCn0NCg=="},{"version":3,"sources":["BookDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"BookDetail.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <h3>書籍詳細</h3>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>タイトル</th>\r\n                    <th>著者</th>\r\n                    <th>発売日</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>{{ dataObj.title }}</td>\r\n                    <td>{{ dataObj.author }}</td>\r\n                    <td>{{ dataObj.release_date }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <router-link :to=\"{name: 'adminUpdate', params: {id: dataObj.id}}\">更新</router-link><br>\r\n        <a href=\"#\" @click.prevent=\"deleteRecord\">削除</a><br>\r\n        <a  v-if=\"dataObj.rental_info === null\" href=\"#\" @click.prevent=\"rentalThisBook\" >貸出</a><br>\r\n        <div v-if=\"dataObj.rental_info !== null\">\r\n            <h3>貸出情報</h3>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>貸出ユーザーID</th>\r\n                    <th>貸出日</th>\r\n                    <th>返却予定日</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>{{ rentalInfo.user_id }}</td>\r\n                    <td>{{ rentalInfo.rental_datetime }}</td>\r\n                    <td>{{ rentalInfo.return_deadline }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <a href=\"\">返却</a><br>\r\n        </div>\r\n        <br>\r\n        <router-link to=\"/book/list\">一覧へ戻る</router-link>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            dataObj: {},\r\n            rentalInfo: {}\r\n        }\r\n    },\r\n    mounted: function() {\r\n        axios.get(`http://localhost:8080/book/detail/${this.$route.params['id']}`, {withCredentials: true})\r\n            .then(response => {\r\n                console.log(response)\r\n                this.dataObj = response.data\r\n                this.rentalInfo = this.dataObj.rental_info\r\n            })\r\n    },\r\n    methods: {\r\n        deleteRecord() {\r\n            if (confirm(`書籍ID: ${this.dataObj.id} の書籍を削除しますか?`)) {\r\n                axios.delete(`http://localhost:8080/admin/book/delete/${this.dataObj.id}`, {withCredentials: true})\r\n                .then( function(response) {\r\n                    console.log(\"----- success -----\")\r\n                    console.log(response)\r\n                    this.$router.push('/admin/book/delete/completed')\r\n                    return response.data.token\r\n                }.bind(this) ).catch( error => {\r\n                    console.log(\"----- error -----\")\r\n                alert(\"書籍は存在しません\")\r\n                if (error.response) {\r\n                    console.log(\"----- response -----\")\r\n                    console.log(error.response.data)\r\n                    console.log(error.response.status)\r\n                    console.log(error.response.headers)\r\n                } else if (error.request) {\r\n                    console.log(\"----- request -----\")\r\n                    console.log(\"error: request\")\r\n                } else {\r\n                    console.log(\"----- else -----\")\r\n                    console.log('Error', error.message)\r\n                }\r\n                console.log(\"----- config -----\")\r\n                console.log(error.config)\r\n                } )\r\n            }\r\n            \r\n        },\r\n        rentalThisBook() {\r\n            console.log(\"----- method rental was called -----\")\r\n            if(confirm(\"この本を借りますか？\")){\r\n                axios.post(\"http://localhost:8080/rental/start\",\r\n                        {book_id: this.dataObj.id},\r\n                        {withCredentials: true})\r\n                .then(function(response) {\r\n                    console.log(\"----- success -----\")\r\n                    console.log(response)\r\n                    this.$router.go({path: this.$router.currentRoute.path, force: true})\r\n                }.bind(this))\r\n                .catch(error => {\r\n                    console.log(\"----- error -----\")\r\n                    alert(\"アプリケーションがバグってる可能性が...\")\r\n                    if (error.response) {\r\n                        console.log(\"----- response -----\")\r\n                        console.log(error.response.data)\r\n                        console.log(error.response.status)\r\n                        console.log(error.response.headers)\r\n                    } else if (error.request) {\r\n                        console.log(\"----- request -----\")\r\n                        console.log(\"error: request\")\r\n                    } else {\r\n                        console.log(\"----- else -----\")\r\n                        console.log('Error', error.message)\r\n                    }\r\n                    console.log(\"----- config -----\")\r\n                    console.log(error.config)\r\n                })\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh3 {\r\n    margin-bottom: 5px;\r\n}\r\n\r\ntable, th, td {\r\n    border: 1px solid black\r\n}\r\n\r\ntable {\r\n    margin: 0 auto;\r\n}\r\n</style>"]}]}