{"remainingRequest":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\src\\views\\BookList.vue?vue&type=style&index=0&id=24c12c3e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\src\\views\\BookList.vue","mtime":1620265207169},{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\shuto-keisuke\\Desktop\\project\\02_kotlinpracticefront\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpoMyB7DQogICAgbWFyZ2luLWJvdHRvbTogNXB4Ow0KfQ0KDQp0YWJsZSwgdGgsIHRkIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaw0KfQ0KDQp0YWJsZSB7DQogICAgbWFyZ2luOiAwIGF1dG87DQp9DQo="},{"version":3,"sources":["BookList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"BookList.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <h3>書籍リスト</h3>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>タイトル</th>\r\n                    <th>著者</th>\r\n                    <th>貸出状況</th>\r\n                    <th>操作</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"data in dataAry\" :key=\"data.title\">\r\n                    <td>{{ data.title }}</td>\r\n                    <td>{{ data.author }}</td>\r\n                    <td>{{ data.rentalStatus }}</td>\r\n                    <td>\r\n                        <router-link :to=\"{name: 'adminUpdate', params: {id: data.id}}\">更新</router-link>\r\n                        &nbsp;\r\n                        <a href=\"#\" @click.prevent=\"deleteRecord\" :data-id=\"data.id\">削除</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            dataAry: []\r\n        }\r\n    },\r\n    mounted: function() {\r\n        axios.get('http://localhost:8080/book/list', {withCredentials: true}).then(function(response) {\r\n            console.log(\"----- success -----\")\r\n            console.log(response)\r\n            this.dataAry = response.data.book_list\r\n            this.dataAry.forEach(data => {\r\n                if (!data.is_rental) {\r\n                    data.rentalStatus = \"貸出可\"\r\n                } else {\r\n                    data.rentalStatus = \"貸出不可\"\r\n                }\r\n            });\r\n        }.bind(this)).catch( error => {\r\n            console.log(\"----- error -----\")\r\n            if (error.response) {\r\n                console.log(\"----- response -----\")\r\n                console.log(error.response.data)\r\n                console.log(error.response.status)\r\n                console.log(error.response.headers)\r\n            } else if (error.request) {\r\n                console.log(\"----- request -----\")\r\n                console.log(\"error: request\")\r\n            } else {\r\n                console.log(\"----- else -----\")\r\n                console.log('Error', error.message)\r\n            }\r\n            console.log(\"----- config -----\")\r\n            console.log(error.config)\r\n        })\r\n    },\r\n    methods: {\r\n        deleteRecord(event) {\r\n            // alert(`書籍ID: ${event.currentTarget.getAttribute('data-id')} の書籍を削除しますか?`)\r\n            if (confirm(`書籍ID: ${event.currentTarget.getAttribute('data-id')} の書籍を削除しますか?`)) {\r\n                axios.delete(`http://localhost:8080/admin/book/delete/${event.currentTarget.getAttribute('data-id')}`, {withCredentials: true})\r\n                .then( function(response) {\r\n                    console.log(\"----- success -----\")\r\n                    console.log(response)\r\n                    this.$router.push('/admin/book/delete/completed')\r\n                    return response.data.token\r\n                }.bind(this) ).catch( error => {\r\n                    console.log(\"----- error -----\")\r\n                alert(\"書籍は存在しません\")\r\n                if (error.response) {\r\n                    console.log(\"----- response -----\")\r\n                    console.log(error.response.data)\r\n                    console.log(error.response.status)\r\n                    console.log(error.response.headers)\r\n                } else if (error.request) {\r\n                    console.log(\"----- request -----\")\r\n                    console.log(\"error: request\")\r\n                } else {\r\n                    console.log(\"----- else -----\")\r\n                    console.log('Error', error.message)\r\n                }\r\n                console.log(\"----- config -----\")\r\n                console.log(error.config)\r\n                } )\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh3 {\r\n    margin-bottom: 5px;\r\n}\r\n\r\ntable, th, td {\r\n    border: 1px solid black\r\n}\r\n\r\ntable {\r\n    margin: 0 auto;\r\n}\r\n</style>"]}]}